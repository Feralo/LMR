#
# process verification statistics generated by LMR_verify_GM.py and LMR_verify_grid.py
#

#import numpy as np
import cPickle

# list with pickle files containing results; these are experiment names
expts = ['production_mlost_ccsm4_pagesall_0.75_101',
         'production_mlost_ccsm4_pagesall_0.75_1',
         'production_gis_ccsm4_pagesall_0.75_101',
         'production_gis_ccsm4_pagesall_0.75_1',
         'production_cru_ccsm4_pagesall_0.75_101',
         'production_cru_ccsm4_pagesall_0.75_1',
         'production_mlost_era20c_pagesall_0.75_101',
         'production_mlost_era20c_pagesall_0.75_1',
         'test_V2proto_TorP_1']

# use a metadata keyword to filter results for quick assessment
#keyword = 'GIS'
#keyword = 'MLOST'
#keyword = 'correlation'
keyword = 'efficiency'
#keyword = 'LMR_GIS coefficient of efficiency'

def print_verification_stats(expts, keyword):
    for ex in expts:
        exfile = ex+'_iters_gmt_verification.pckl'
        print '---------------------------------------------------------------------'
        print 'working on file: ',exfile
        infile = open(exfile,'r')
        ddict = cPickle.load(infile)

        # NOTE: This line obliterates any variables in global scope with same name as ddict key
        # load keys into variables by the key name
        # globals().update(ddict)
        stat_metadata = ddict['stat_metadata']
        
        # list out keys conditionally
        for key in ddict.keys():
            #print key,ddict[key],stat_metadata[key]
            if keyword in stat_metadata[key]:
                print key,ddict[key],stat_metadata[key]

print_verification_stats(expts, keyword)

keyword = 'LMR_GIS coefficient of efficiency'
print '\nresults for all experiments for metric: ' + keyword
print_verification_stats(expts, keyword)
